@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  /**
   * Tailwind CSS theme
   * tailwind.config.ts expects the following color variables to be expressed as HSL values.
   * A different format will require also updating the theme in tailwind.config.ts.
  */
  :root {
    --background: 0 0% 100%;
    --foreground: 224 71% 4%;

    --card: 0 0% 100%;
    --card-foreground: 224 71% 4%;

    --popover: 0 0% 100%;
    --popover-foreground: 224 71% 4%;

    --primary: 262 83% 58%;
    --primary-foreground: 210 20% 98%;

    --secondary: 220 14% 96%;
    --secondary-foreground: 220 9% 46%;

    --muted: 220 14% 96%;
    --muted-foreground: 220 9% 46%;

    --accent: 220 14% 96%;
    --accent-foreground: 220 9% 46%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 210 20% 98%;

    --border: 220 13% 91%;
    --input: 220 13% 91%;
    --ring: 262 83% 58%;

    --radius: 0.75rem;

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  .dark {
    --background: 224 71% 4%;
    --foreground: 210 20% 98%;

    --card: 224 71% 4%;
    --card-foreground: 210 20% 98%;

    --popover: 224 71% 4%;
    --popover-foreground: 210 20% 98%;

    --primary: 263 70% 50%;
    --primary-foreground: 210 20% 98%;

    --secondary: 215 28% 17%;
    --secondary-foreground: 210 20% 98%;

    --muted: 215 28% 17%;
    --muted-foreground: 217 9% 61%;

    --accent: 215 28% 17%;
    --accent-foreground: 210 20% 98%;

    --destructive: 0 63% 31%;
    --destructive-foreground: 210 20% 98%;

    --border: 215 28% 17%;
    --input: 215 28% 17%;
    --ring: 263 70% 50%;
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    overflow-x: hidden;
  }
}

/* Dynamic Keyframe Animations */
@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-20px); }
}

@keyframes pulse-glow {
  0%, 100% {
    box-shadow: 0 0 5px hsl(var(--primary)), 0 0 10px hsl(var(--primary)), 0 0 15px hsl(var(--primary));
  }
  50% {
    box-shadow: 0 0 10px hsl(var(--primary)), 0 0 20px hsl(var(--primary)), 0 0 30px hsl(var(--primary));
  }
}

@keyframes gradient-shift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

@keyframes rotate-slow {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes bounce-in {
  0% { transform: scale(0.3) rotate(0deg); opacity: 0; }
  50% { transform: scale(1.05) rotate(180deg); }
  70% { transform: scale(0.9) rotate(270deg); }
  100% { transform: scale(1) rotate(360deg); opacity: 1; }
}

@keyframes typewriter {
  from { width: 0; }
  to { width: 100%; }
}

@keyframes blink {
  50% { border-color: transparent; }
}

@keyframes particle-float {
  0%, 100% {
    transform: translateY(0px) translateX(0px);
    opacity: 0.7;
  }
  25% {
    transform: translateY(-100px) translateX(50px);
    opacity: 1;
  }
  50% {
    transform: translateY(-200px) translateX(-30px);
    opacity: 0.8;
  }
  75% {
    transform: translateY(-100px) translateX(-80px);
    opacity: 0.9;
  }
}

@keyframes skill-glow {
  0%, 100% {
    box-shadow: 0 0 5px currentColor;
    transform: scale(1);
  }
  50% {
    box-shadow: 0 0 20px currentColor, 0 0 30px currentColor;
    transform: scale(1.05);
  }
}

@keyframes wave {
  0%, 100% { transform: rotate(0deg); }
  25% { transform: rotate(20deg); }
  75% { transform: rotate(-20deg); }
}

/* Utility Classes */
.animate-float {
  animation: float 6s ease-in-out infinite;
  will-change: transform;
}

.animate-pulse-glow {
  animation: pulse-glow 2s ease-in-out infinite;
  will-change: box-shadow;
}

.animate-gradient-shift {
  background: linear-gradient(-45deg, hsl(var(--primary)), hsl(var(--secondary)), hsl(var(--accent)), hsl(var(--primary)));
  background-size: 400% 400%;
  animation: gradient-shift 4s ease infinite;
  will-change: background-position;
}

.animate-rotate-slow {
  animation: rotate-slow 20s linear infinite;
}

.animate-bounce-in {
  animation: bounce-in 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.animate-skill-glow {
  animation: skill-glow 3s ease-in-out infinite;
}

.animate-wave {
  animation: wave 2s ease-in-out infinite;
}

.particle {
  position: absolute;
  width: 4px;
  height: 4px;
  background: hsl(var(--primary));
  border-radius: 50%;
  animation: particle-float 8s ease-in-out infinite;
}

.typewriter {
  overflow: hidden;
  border-right: 3px solid hsl(var(--primary));
  white-space: nowrap;
  animation: typewriter 3s steps(30, end), blink 1s step-end infinite;
}
